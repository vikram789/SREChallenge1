---
# ---------------------------------
# PLAY 1 - create EC2 with Base  AMI
# ---------------------------------
- name: Create Base AMI
  hosts: localhost
  gather_facts: yes
  vars_files:
    - "group_vars/vars.yml"

  pre_tasks:
  - set_fact:
        timestamp: "{{lookup('pipe','date +%Y%m%d%H%M%S')}}"
  tasks:
  - name: Find the latest base AMI
    ec2_ami_find:
     owner: self
     ami_tags:
      Name: "{{ base_ami_type }}*"
     no_result_action: fail
     region: "{{ region }}"
     sort: creationDate
     sort_order: descending
     sort_end: 1
    register: ami_find

  - name: Create EC2 Instance
    ec2:
     instance_type: "{{ ec2_instance_type }}"
     image: "{{ ami_find.results[0].ami_id }}"
     ec2_region: "{{ region }}"
     wait: yes
     instance_tags: "{{ CI_instance_tags }}"
     group_id: [ "{{ sg_1 }}", "{{ sg_2 }}" ]
     vpc_subnet_id: "{{ ec2_subnet_ids }}"
     assign_public_ip: yes
     exact_count: 1
     count_tag:
      Name: "{{ resource_name_CI }}"
    register: temp_ec2

  - pause: seconds=150

  - name: Create/Update LoadBalancer
    ec2_elb_lb:
     name: CI-LB
     state: present
     region: "{{ region }}"
     zones:
      - us-east-1c
     instance_ids:
      - "{{ temp_ec2.instance_ids[0] }}"
     purge_instance_ids: true
     listeners:
      - protocol: http # options are http, https, ssl, tcp
        load_balancer_port: 80
        instance_port: 80
        proxy_protocol: True
      - protocol: https
        load_balancer_port: 443
        instance_protocol: http # optional, defaults to value of protocol setting
        instance_port: 80
        # ssl certificate required for https or ssl
        ssl_certificate_id: "arn:aws:acm:us-east-1:862454798140:certificate/e1382f43-236d-4524-afb4-f65347f9097e"

  - name: Add all instance private  IPs to host group
    add_host: name="{{ temp_ec2.instances[0]['private_ip'] }}" groups=webserver

#-----------------------
## Play2 --- Deployment 
##---------------------

- name: Deploy Code
  hosts: webserver
  become: true
  tasks:
  - name: Code Deployment
    copy:
     src: ../src/index.html
     dest: /var/www/html
     owner: root
     group: root

#-----------------------------
#  Play3 - Create Component AMI
#  ----------------------------
- name:  Create Component AMI
  hosts: localhost
  gather_facts: yes
  vars_files:
    - "group_vars/vars.yml"

  tasks:
  - ec2_ami:
     instance_id: "{{ temp_ec2.instance_ids[0] }}"
     wait: yes
     name: "{{ resource_name_CI }}"
     region: "{{ region }}"
     tags:
      Name: "{{ resource_name_CI }}"
      Type: "{{ base_ami_type }}"
    register: image

  - name: display AMI Details
    debug: msg="Newly created AMI ID is {{ image.image_id }}"

